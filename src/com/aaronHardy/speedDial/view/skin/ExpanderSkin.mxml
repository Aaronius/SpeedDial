<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5">
    <fx:Metadata>
		[HostComponent("com.aaronHardy.speedDial.view.components.Expander")]
	</fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[
			import mx.events.FlexEvent;
			
			import spark.effects.easing.Power;
			import spark.effects.easing.Sine;
			
			[Bindable]
			protected var contentGroupMeasuredHeight:Number = 0; 
			
			override protected function measure():void
			{
				super.measure();
				contentGroupMeasuredHeight = contentGroup.measuredHeight;
			}
			
			/**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                // Push backgroundColor and backgroundAlpha directly.
                // Handle undefined backgroundColor by hiding the background object.
                if (isNaN(getStyle("backgroundColor")))
                {
                    background.visible = false;
                }
                else
                {
                    background.visible = true;
                    bgFill.color = getStyle("backgroundColor");
                    bgFill.alpha = getStyle("backgroundAlpha");
                }
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
        ]]>        
    </fx:Script>
    
    <s:states>	
        <s:State name="normal" />
        <s:State name="disabled" />
		<s:State name="open" />
    </s:states>
	
	<s:transitions>
		<s:Transition autoReverse="true">
			<s:Resize target="{contentGroup}" easer="{new Sine(0)}" duration="250"/>
		</s:Transition>
	</s:transitions>
    
    <!--- Defines the appearance of the SkinnableContainer class's background. -->
    <s:Rect id="background" left="0" right="0" top="0" bottom="0">
        <s:fill>
            <!--- @private -->
            <s:SolidColor id="bgFill" color="#FFFFFF"/>
        </s:fill>
    </s:Rect>
	
	<s:Button id="toggleButton" width="100%" cornerRadius="0"/>
    
    <!--
        Note: setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
    -->
    <!--- @copy spark.components.SkinnableContainer#contentGroup -->
    <s:Group id="contentGroup" left="0" right="0" top="{toggleButton.height}" bottom="0" minWidth="0" minHeight="0"
			 height.normal="0" height.open="{contentGroupMeasuredHeight}">
        <s:layout>
            <s:VerticalLayout horizontalAlign="center"/>
        </s:layout>
		<s:mask>
			<s:Group>
				<s:Rect id="maskRect" width="{contentGroup.width}" height="{contentGroup.height}">
					<s:fill>
						<s:SolidColor color="0xff0000"/>
					</s:fill>
				</s:Rect>
			</s:Group>
		</s:mask>
    </s:Group>

</s:Skin>